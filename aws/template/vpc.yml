AWSTemplateFormatVersion: 2010-09-09
Parameters:
  SystemId:
    Type: String
    Description: System's ID used as a part of the AWS resource names
  Env:
    Type: String
    Description: target environment
    AllowedValues:
      - dev
      - stg
      - prod
  NwSeg:
    Type: String
    Description: network segment
    AllowedValues:
      - 10.0.0
      - 10.0.1

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      Tags:
        - Key: SystemId
          Value: !Sub "${SystemId}"
        - Key: Env
          Value: !Sub "${Env}"
      CidrBlock: !Sub ${NwSeg}.0/24
      EnableDnsHostnames: true
      EnableDnsSupport: true

  # AZa
  PublicSubnetAZa:
    Type: AWS::EC2::Subnet
    Properties:
      Tags:
        - Key: SystemId
          Value: !Sub "${SystemId}"
        - Key: Env
          Value: !Sub "${Env}"
      VpcId: !Ref VPC
      CidrBlock: !Sub '${NwSeg}.0/27'
      AvailabilityZone: ap-northeast-1a
  ProtectSubnetAZa:
    Type: AWS::EC2::Subnet
    Properties:
      Tags:
        - Key: SystemId
          Value: !Sub "${SystemId}"
        - Key: Env
          Value: !Sub "${Env}"
      VpcId: !Ref VPC
      CidrBlock: !Sub '${NwSeg}.64/26'
      AvailabilityZone: ap-northeast-1a
  PrivateSubnetAZa:
    Type: AWS::EC2::Subnet
    Properties:
      Tags:
        - Key: SystemId
          Value: !Sub "${SystemId}"
        - Key: Env
          Value: !Sub "${Env}"
      VpcId: !Ref VPC
      CidrBlock: !Sub '${NwSeg}.192/28'
      AvailabilityZone: ap-northeast-1a

  # AZc
  PublicSubnetAZc:
    Type: AWS::EC2::Subnet
    Properties:
      Tags:
        - Key: SystemId
          Value: !Sub "${SystemId}"
        - Key: Env
          Value: !Sub "${Env}"
      VpcId: !Ref VPC
      CidrBlock: !Sub '${NwSeg}.32/27'
      AvailabilityZone: ap-northeast-1c
  ProtectSubnetAZc:
    Type: AWS::EC2::Subnet
    Properties:
      Tags:
        - Key: SystemId
          Value: !Sub "${SystemId}"
        - Key: Env
          Value: !Sub "${Env}"
      VpcId: !Ref VPC
      CidrBlock: !Sub '${NwSeg}.128/26'
      AvailabilityZone: ap-northeast-1c
  PrivateSubnetAZc:
    Type: AWS::EC2::Subnet
    Properties:
      Tags:
        - Key: SystemId
          Value: !Sub "${SystemId}"
        - Key: Env
          Value: !Sub "${Env}"
      VpcId: !Ref VPC
      CidrBlock: !Sub '${NwSeg}.208/28'
      AvailabilityZone: ap-northeast-1c

  PublicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      Tags:
        - Key: SystemId
          Value: !Sub "${SystemId}"
        - Key: Env
          Value: !Sub "${Env}"
      GroupDescription: Public Security Group
      SecurityGroupIngress:
        # Internet
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Sub '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Sub '0.0.0.0/0'
        - IpProtocol: udp
          FromPort: 80
          ToPort: 80
          CidrIp: !Sub '0.0.0.0/0'
        - IpProtocol: udp
          FromPort: 443
          ToPort: 443
          CidrIp: !Sub '0.0.0.0/0'
        # Public Subnet AZa
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: !Sub '${NwSeg}.0/27'
        # Public Subnet AZc
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: !Sub '${NwSeg}.32/27'
      SecurityGroupEgress:
        # Public Subnet AZa
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: !Sub '${NwSeg}.0/27'
        # Public Subnet AZc
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: !Sub '${NwSeg}.32/27'
        # Protect Subnet AZa
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Sub '${NwSeg}.64/26'
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Sub '${NwSeg}.64/26'
        - IpProtocol: udp
          FromPort: 80
          ToPort: 80
          CidrIp: !Sub '${NwSeg}.64/26'
        - IpProtocol: udp
          FromPort: 443
          ToPort: 443
          CidrIp: !Sub '${NwSeg}.64/26'
        # Protect Subnet AZc
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Sub '${NwSeg}.128/26'
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Sub '${NwSeg}.128/26'
        - IpProtocol: udp
          FromPort: 80
          ToPort: 80
          CidrIp: !Sub '${NwSeg}.128/26'
        - IpProtocol: udp
          FromPort: 443
          ToPort: 443
          CidrIp: !Sub '${NwSeg}.128/26'
      VpcId: !Ref VPC

  ProtectSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      Tags:
        - Key: SystemId
          Value: !Sub "${SystemId}"
        - Key: Env
          Value: !Sub "${Env}"
      GroupDescription: Protect Security Group
      SecurityGroupIngress:
        # Public Subnet AZa
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Sub '${NwSeg}.0/27'
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Sub '${NwSeg}.0/27'
        - IpProtocol: udp
          FromPort: 80
          ToPort: 80
          CidrIp: !Sub '${NwSeg}.0/27'
        - IpProtocol: udp
          FromPort: 443
          ToPort: 443
          CidrIp: !Sub '${NwSeg}.0/27'
        # Public Subnet AZc
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Sub '${NwSeg}.32/27'
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Sub '${NwSeg}.32/27'
        - IpProtocol: udp
          FromPort: 80
          ToPort: 80
          CidrIp: !Sub '${NwSeg}.32/27'
        - IpProtocol: udp
          FromPort: 443
          ToPort: 443
          CidrIp: !Sub '${NwSeg}.32/27'
        # Protect Subnet AZa
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: !Sub '${NwSeg}.64/26'
        # Protect Subnet AZc
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: !Sub '${NwSeg}.128/26'
      SecurityGroupEgress:
        # Public Subnet AZa / AZc
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        # Protect Subnet AZa
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: !Sub '${NwSeg}.64/26'
        # Protect Subnet AZa
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: !Sub '${NwSeg}.128/26'
        # Private Subnet AZa
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: !Sub '${NwSeg}.192/28'
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: !Sub '${NwSeg}.192/28'
        # Private Subnet AZc
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: !Sub '${NwSeg}.208/28'
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: !Sub '${NwSeg}.208/28'
      VpcId: !Ref VPC

  PrivateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      Tags:
        - Key: SystemId
          Value: !Sub "${SystemId}"
        - Key: Env
          Value: !Sub "${Env}"
      GroupDescription: Private Security Group
      SecurityGroupIngress:
        # Private Subnet AZa
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: !Sub '${NwSeg}.64/26'
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: !Sub '${NwSeg}.64/26'
        # Private Subnet AZc
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: !Sub '${NwSeg}.128/26'
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: !Sub '${NwSeg}.128/26'
      VpcId: !Ref VPC

  # VPC Internet rooting
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: SystemId
          Value: !Sub "${SystemId}"
        - Key: Env
          Value: !Sub "${Env}"
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  PublicSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: SystemId
          Value: !Sub "${SystemId}"
        - Key: Env
          Value: !Sub "${Env}"
      VpcId: !Ref VPC
  RouteInternetGateway:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicSubnetRouteTable

  # PublicSubnet Rooting
  PublicSubnetRouteTableAssociationAZa:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTable
      SubnetId: !Ref PublicSubnetAZa
  PublicSubnetRouteTableAssociationAZc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTable
      SubnetId: !Ref PublicSubnetAZc

  # AZa ProtectSubnet rooting
  ElasticIPAZa:
    Type: AWS::EC2::EIP
    Properties:
      Tags:
        - Key: SystemId
          Value: !Sub "${SystemId}"
        - Key: Env
          Value: !Sub "${Env}"
      Domain: vpc
  NatGatewayAZa:
    Type: AWS::EC2::NatGateway
    Properties:
      Tags:
        - Key: SystemId
          Value: !Sub "${SystemId}"
        - Key: Env
          Value: !Sub "${Env}"
      AllocationId: !GetAtt ElasticIPAZa.AllocationId
      SubnetId: !Ref PublicSubnetAZa
    DependsOn:
      - ElasticIPAZa
  ProtectSubnetRouteTableAZa:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: SystemId
          Value: !Sub "${SystemId}"
        - Key: Env
          Value: !Sub "${Env}"
      VpcId: !Ref VPC
  RouteNatGatewayAZa:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayAZa
      RouteTableId: !Ref ProtectSubnetRouteTableAZa
  ProtectSubnetRouteTableAssociationAZa:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref ProtectSubnetRouteTableAZa
      SubnetId: !Ref ProtectSubnetAZa

  # AZa ProtectSubnet rooting
  ElasticIPAZc:
    Type: AWS::EC2::EIP
    Properties:
      Tags:
        - Key: SystemId
          Value: !Sub "${SystemId}"
        - Key: Env
          Value: !Sub "${Env}"
      Domain: vpc
  NatGatewayAZc:
    Type: AWS::EC2::NatGateway
    Properties:
      Tags:
        - Key: SystemId
          Value: !Sub "${SystemId}"
        - Key: Env
          Value: !Sub "${Env}"
      AllocationId: !GetAtt ElasticIPAZc.AllocationId
      SubnetId: !Ref PublicSubnetAZc
    DependsOn:
      - ElasticIPAZc
  ProtectSubnetRouteTableAZc:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: SystemId
          Value: !Sub "${SystemId}"
        - Key: Env
          Value: !Sub "${Env}"
      VpcId: !Ref VPC
  ProtectSubnetRouteAZc:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayAZc
      RouteTableId: !Ref ProtectSubnetRouteTableAZc
  ProtectSubnetRouteTableAssociationAZc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref ProtectSubnetRouteTableAZc
      SubnetId: !Ref ProtectSubnetAZc

  AppRunnerEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref ProtectSecurityGroup
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.apprunner"
      SubnetIds:
        - !Ref ProtectSubnetAZa
        - !Ref ProtectSubnetAZc
      VpcEndpointType: "Interface"
      VpcId: !Ref VPC

Outputs:
  VPC:
    Value: !Ref VPC
    Export:
      Name: !Sub "${SystemId}-${Env}-VPC"

  PublicSubnetAZa:
    Value: !Ref PublicSubnetAZa
    Export:
      Name: !Sub "${SystemId}-${Env}-PublicSubnetAZa"
  ProtectSubnetAZa:
    Value: !Ref ProtectSubnetAZa
    Export:
      Name: !Sub "${SystemId}-${Env}-ProtectSubnetAZa"
  PrivateSubnetAZa:
    Value: !Ref PrivateSubnetAZa
    Export:
      Name: !Sub "${SystemId}-${Env}-PrivateSubnetAZa"

  PublicSubnetAZc:
    Value: !Ref PublicSubnetAZc
    Export:
      Name: !Sub "${SystemId}-${Env}-PublicSubnetAZc"
  ProtectSubnetAZc:
    Value: !Ref ProtectSubnetAZc
    Export:
      Name: !Sub "${SystemId}-${Env}-ProtectSubnetAZc"
  PrivateSubnetAZc:
    Value: !Ref PrivateSubnetAZc
    Export:
      Name: !Sub "${SystemId}-${Env}-PrivateSubnetAZc"

  PublicSecurityGroup:
    Value: !Ref PublicSecurityGroup
    Export:
      Name: !Sub "${SystemId}-${Env}-PublicSecurityGroup"
  ProtectSecurityGroup:
    Value: !Ref ProtectSecurityGroup
    Export:
      Name: !Sub "${SystemId}-${Env}-ProtectSecurityGroup"
  PrivateSecurityGroup:
    Value: !Ref PrivateSecurityGroup
    Export:
      Name: !Sub "${SystemId}-${Env}-PrivateSecurityGroup"
